{"ast":null,"code":"var _jsxFileName = \"/home/e/develop/BondSport/src/context/Context.global.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalContext = /*#__PURE__*/createContext(undefined);\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [favoritePeople, setFavoritePeople] = React.useState([]);\n  const updatePeople = newValue => {\n    setFavoritePeople(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      favoritePeople,\n      updatePeople\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalProvider, \"x/LQDQ0WFJeaXNaMNQKQ6OZOtOo=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  const context = useContext(GlobalContext);\n  if (!context) {\n    throw new Error('useMyContext must be used within a MyProvider');\n  }\n  return context;\n};\n_s2(useGlobalContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","createContext","useContext","jsxDEV","_jsxDEV","GlobalContext","undefined","GlobalProvider","children","_s","favoritePeople","setFavoritePeople","useState","updatePeople","newValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","context","Error","$RefreshReg$"],"sources":["/home/e/develop/BondSport/src/context/Context.global.tsx"],"sourcesContent":["import React, { createContext, useContext, ReactNode } from 'react';\nimport { CharacterProps } from './../types/character';\n\ninterface ContextsType {\n  favoritePeople: CharacterProps[];\n  updatePeople: (newValue: CharacterProps[]) => void;\n}\n\nconst GlobalContext = createContext<ContextsType | undefined>(undefined);\n\nexport const GlobalProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [favoritePeople, setFavoritePeople] = React.useState<CharacterProps[]>([]); \n  const updatePeople = (newValue: CharacterProps[]) => {\n    setFavoritePeople(newValue);\n  };\n\n  return (\n    <GlobalContext.Provider value={{ favoritePeople, updatePeople }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n\nexport const useGlobalContext = () => {\n  const context = useContext(GlobalContext);\n  if (!context) {\n    throw new Error('useMyContext must be used within a MyProvider');\n  }\n  return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQpE,MAAMC,aAAa,gBAAGJ,aAAa,CAA2BK,SAAS,CAAC;AAExE,OAAO,MAAMC,cAAiD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAmB,EAAE,CAAC;EAChF,MAAMC,YAAY,GAAIC,QAA0B,IAAK;IACnDH,iBAAiB,CAACG,QAAQ,CAAC;EAC7B,CAAC;EAED,oBACEV,OAAA,CAACC,aAAa,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEN,cAAc;MAAEG;IAAa,CAAE;IAAAL,QAAA,EAC7DA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACX,EAAA,CAXWF,cAAiD;AAAAc,EAAA,GAAjDd,cAAiD;AAa9D,OAAO,MAAMe,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpC,MAAMC,OAAO,GAAGtB,UAAU,CAACG,aAAa,CAAC;EACzC,IAAI,CAACmB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,gBAAgB;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}